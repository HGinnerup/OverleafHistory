// ==UserScript==
// @name         overleaf-history-navigation
// @namespace    https://github.com/HGinnerup/OverleafHistory
// @version      1.0.5
// @description  A Greasemonkey/Tampermonkey script to add history navigation to Overleaf
// @licence      GPL-3.0-or-later
// @author       Henrik Ginnerup
// @match        https://www.overleaf.com/project/*
// @grant        none
// @updateURL    https://github.com/HGinnerup/OverleafHistory/raw/master/dist/overleaf-history-navigation.user.js
// @downloadURL  https://github.com/HGinnerup/OverleafHistory/raw/master/dist/overleaf-history-navigation.user.js
// @run-at      document-end
// ==/UserScript==

(()=>{"use strict";class t{constructor(t){this.element=t}getElement(){return this.element}getParent(){if(!this.parent){if(this.element.parentElement.classList.contains("file-tree-list"))return null;this.parent=new t(this.element.parentElement.previousSibling)}return this.parent}navigateTo(){this.element.click()}getName(){return this.element.getAttribute("aria-label")}getPathString(){return this.getParent()?`${this.getParent().getPathString()}/${this.getName()}`:this.getName()}getIsLeaf(){return null===this.element.getAttribute("aria-expanded")}static getCurrentPath(){return new t(document.querySelector("li.selected[role=treeitem]"))}static getPathFromString(e){let n=document.querySelector("div.file-tree-inner "+e.split("/").map((t=>`*>[aria-label='${t}']`)).join("+"));return new t(n)}equals(e){return e instanceof t&&this.element==e.element}}class e{constructor(){this.onPathChangeFuncs=[]}addOnPathChange(t){this.onPathChangeFuncs.push(t)}callOnPathChangeFuncs(t){for(let e of this.onPathChangeFuncs)e(t)}startListening(){this.clickNavigationListener=()=>this.clickListener(),document.querySelector("div.file-tree-inner").addEventListener("click",this.clickNavigationListener)}stopListening(){document.querySelector("div.file-tree-inner").removeEventListener("click",this.clickNavigationListener)}clickListener(){setTimeout((()=>{let e=t.getCurrentPath();this.currentLocation!=e&&(this.currentLocation=e,this.callOnPathChangeFuncs(e))}),0)}}class n{getPathString(){return window.location.hash.substring(1)}constructor(){this.pathListener=new e,""==window.location.hash&&(window.location.hash=t.getCurrentPath().getPathString()),this.pathListener.addOnPathChange((t=>this.onPathChange(t))),window.addEventListener("popstate",(t=>this.onUserNavigation()),!1),this.pathListener.startListening()}getProjectName(){return document.querySelector(".name").innerText}getNewTitle(t){return t?`${this.getProjectName()} - ${t.getName()} - Overleaf`:document.querySelector("title").innerText}onPathChange(t){let e=t.getPathString();if(e!==this.getPathString()){let n=this.getNewTitle(t);window.history.pushState(null,n,`${window.location.pathname}#${e}`),document.title=n}}onUserNavigation(){this.pathListener.stopListening(),t.getPathFromString(this.getPathString()).navigateTo(),this.pathListener.startListening()}}setTimeout((()=>{new n}),3e3)})();